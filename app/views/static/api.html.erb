<h1>API</h1>
<p>OpenThought includes a simple REST API for use by clients. From the API you can list, 
create, and delete thoughts. You can also change thoughts, but there seems to be no need
I don't think you should. This documentation assumes that you are running OT on 
localhost:3000. If this is not the case, replace localhost:3000 with the appropriate host
and port when necessary.</p>

<h2>Authentication</h2>
<p>Authentication is managed through an authentication token. Each user has their own unique
and easily regenerated API token which can be found in their user edit page. You only need
to include this authentication token as a parameter, and you are authenticated as that user.</p>

<div class="code">
  curl localhost:3000/?auth_token=XXXXXXXXXXXXXXXXXXXX
</div>

<p>Thus, you authenticate. This actually sets a session cookie, but you don't have to store that, 
you can just send the authentication token with each request.</p>

<h2>Thoughts</h2>
<p>There is really only 1 resource you need to worry about: thoughts. You can get a list of 
thoughts, make new thoughts, and delete thoughts. The API is a simple REST API, using the GET,
POST, and DELETE "verbs". The app supports both XML and JSON responses. This documentation
uses JSON for the examples, but where ever you see ".json" you can replace it ".xml" and it
should work just fine.</p>

<p>To get a list of the current user's thoughts, </p>

<div class="code">
  GET /thoughts.json
</div>

<p>This will return an array of Thought objects encoded in JSON. Each Thought includes a unique
ObjectId and an owner id. With the ObjectId, you can get more information on a specific thought.
To be honest, you actually don't get any more information. If you have an id of 
XXXXXXXXXXXXXXXXXXXXXXXX, you can get the thought with</p>

<div class="code">
  GET /thoughts/XXXXXXXXXXXXXXXXXXXXXXXX.json
</div>

<p>You can also delete a thought with</p>

<div class="code">
  DELETE /thoughts/XXXXXXXXXXXXXXXXXXXXXXXX.json
</div>

<p>Finally, you can create a new thought by POSTing {"simple_thought": "I am thinking..."} to
/thoughts.json</p>

<div class="code">
  POST /thoughts.json {"simple_thought": "Insert thought here"}
</div>

<h2>Tags</h2>
<p>
  Thoughts can be tagged with octothorps. When rendered, thoughts include links '/tag/:tag',
  which lists all the thoughts tagged with that tag. OT exposes a JSON and XML api for getting
  tags and their associated thoughts.
</p>

<p>You can get a list of tags:</p>

<div class="code">
  GET /tags.json
</div>

<p>You can a list of thoughts tagged with a tag like so:</p>

<div class="code">
  GET /tags/:tag.json
</div>

The thought list is formatted in the same way as '/thoughts'.
